buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.gradle:osdetector-gradle-plugin:1.6.0'
    }
}

apply plugin: 'java'
apply plugin: 'com.google.osdetector'

ext.platform = osdetector.os == 'osx' ? 'mac' : osdetector.os == 'windows' ? 'win' : osdetector.os


sourceSets {
    java9 {
        java {
            srcDirs = ['src/main/java9']
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly "org.openjfx:javafx-base:11:$platform"
    compileOnly "org.openjfx:javafx-fxml:11:$platform"
    compileOnly "org.openjfx:javafx-graphics:11:$platform"
    compileOnly "org.openjfx:javafx-controls:11:$platform"

    // https://mvnrepository.com/artifact/org.jetbrains/annotations
    compile group: 'org.jetbrains', name: 'annotations', version: '16.0.3'

    // https://mvnrepository.com/artifact/de.codecentric.centerdevice/centerdevice-nsmenufx
    compile group: 'de.codecentric.centerdevice', name: 'centerdevice-nsmenufx', version: '2.1.6'

    // https://mvnrepository.com/artifact/org.controlsfx/controlsfx
    compile group: 'org.controlsfx', name: 'controlsfx', version: '8.40.14'

    // https://mvnrepository.com/artifact/org.fxmisc.richtext/richtextfx
    compile group: 'org.fxmisc.richtext', name: 'richtextfx', version: '0.9.1'

    java9Implementation files(sourceSets.main.output.classesDirs) { builtBy compileJava }
}


compileJava {
    sourceCompatibility = 8
    targetCompatibility = 8
}

compileJava9Java {
    sourceCompatibility = 9
    targetCompatibility = 9
}

jar {
    into('META-INF/versions/9') {
        from sourceSets.java9.output
    }
}

task release(type: Jar) {
    archiveName = "${rootProject.name}-${version}-release.jar"
    from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}


task run(type: JavaExec, dependsOn: jar) {
    main = viewerMainClassName
    classpath = files(sourceSets.main.compileClasspath, jar.archivePath)
    jvmArgs = [
            '--module-path', classpath.asPath,
            '--add-modules', 'javafx.controls'
    ]
}


tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


tasks.withType(ProcessResources).each { task ->
    task.from(task.getSource()) {
        include '**/*.properties'
        filter(org.apache.tools.ant.filters.EscapeUnicode)
    }
}

tasks.withType(Jar) {
    manifest {
        attributes 'Implementation-Version': '1.2',
                'Main-Class': viewerMainClassName,
                'Multi-Release': 'true'

    }
}